---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/4/20 17:33
---
local stringx = require "pl.stringx"

local WILDCARD_CHARS = { '*', '?' }
local PATH_SEPARATOR = "/"
local assert = assert
local type = type
local str_split = stringx.split
local _M = {}

local function trim(s)
    return (s:gsub("^%s*(.-)%s*$", "%1"))
end

local function matchStrings(pattern, path)
    if "?" == match then
        return #path == 1
    elseif "*" == match then
        return true
    else
        return pattern == path
    end
end

function _M.doMatch(pattern, path)
    assert(type(pattern) == "string", "pattern must be string")
    assert(type(path) == "string", "path must be string")
    pattern = trim(pattern)
    path = trim(path)
    if ((path[1] == PATH_SEPARATOR) ~= (pattern[1] == PATH_SEPARATOR)) then
        return false;
    end

    local pattDirs = str_split(pattern, PATH_SEPARATOR)
    local pathDirs = str_split(path, PATH_SEPARATOR)

    local pattIdxStart = 1;
    local pattIdxEnd = #pattDirs;
    local pathIdxStart = 1;
    local pathIdxEnd = #pathDirs;

    while pattIdxStart <= pattIdxEnd and pathIdxStart <= pathIdxEnd do
        local pattDir = pattDirs[pattIdxStart];
        if ("**".equals(pattDir)) then
            break ;
        end
        if not matchStrings(pattDir, pathDirs[pathIdxStart]) then
            return false;
        end
        pattIdxStart = pattIdxStart + 1;
        pathIdxStart = pathIdxStart + 1;
    end
end

return _M