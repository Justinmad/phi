#user  yangyang.zhang;
worker_processes 2;
error_log logs/error.log info;

events {
    worker_connections 1024;
}

http{
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;

    lua_package_path '../phi/?.lua;../lib/?.lua;;';
    lua_package_cpath '../lib/?.so;;';
    lua_code_cache off;

    lua_shared_dict phi                5m;
    lua_shared_dict phi_cache          128m;

    init_by_lua_block {
        PHI = require 'Phi'
        PHI.init();
    }

    init_worker_by_lua_block {
        PHI.init_worker();
    }

    server {
        listen 8080;
        server_name phi;

        location / {
            set $protocol_scheme 'http';
            set $backend '';

            rewrite_by_lua_block {
                PHI.rewrite()
            }

            access_by_lua_block {
                PHI.access()
            }

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Proto $protocol_scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass $protocol_scheme://$backend;

            log_by_lua_block {
                PHI.log()
            }
        }

    }

    upstream phi_upstream {
        server 0.0.0.1;   # just an invalid address as a place holder
        balancer_by_lua_block {
            PHI.balancer();
        }
        keepalive 20;
    }
    include vhost.nginx;
}

