#user  yangyang.zhang;
worker_processes 1;
#worker_cpu_affinity auto;
error_log E:/work/phi/logs/error.log debug;
working_directory E:/work/phi/conf;

events {
    worker_connections 10240;
}

http{
    access_log off;
    send_timeout 60s;
    keepalive_timeout 75s;
    keepalive_requests 10000;
    client_body_timeout 60s;
    client_header_timeout 60s;
    charset UTF-8;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    lua_package_path 'E:/work/phi/openresty/?.lua;E:/work/phi/phi/?.lua;E:/work/phi/lib/?.lua;;';
    lua_code_cache on;

    lua_shared_dict phi                     5m;
    lua_shared_dict phi_events              5m;
    lua_shared_dict phi_lock                5m;
    lua_shared_dict phi_router              10m;
    lua_shared_dict phi_upstream            10m;
    lua_shared_dict phi_limiter             10m;
    lua_shared_dict phi_limit_req           128m;
    lua_shared_dict phi_limit_conn          128m;
#   lua_shared_dict phi_cache          128m;

    init_by_lua_block {
        PHI = require 'Phi'
        PHI:init();
    }

    init_worker_by_lua_block {
        PHI:init_worker();
    }

    server {
            listen 80;

        location / {
            set $protocol_scheme 'http';
            set $backend '';

            rewrite_by_lua_block {
                PHI:rewrite()
            }

            access_by_lua_block {
                PHI:access()
            }

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Proto $protocol_scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass $protocol_scheme://$backend;

            log_by_lua_block {
                PHI:log()
            }
        }

    }
    server {
        listen 8111;
        location / {
            proxy_pass http://upstream8888;
        }
    }
    server {
        listen 12345;

        location /nginx_status {
            access_log off;
            stub_status;
        }

        location / {
            default_type application/json;
            content_by_lua_block {
                PHI.admin:content_by_lua()
            }
            log_by_lua_block {
                PHI:log()
            }
        }

    }

    upstream phi_upstream {
        server 0.0.0.1;   # just an invalid address as a place holder
        balancer_by_lua_block {
            PHI:balancer();
        }
        keepalive 200;
    }

    include vhost.conf;
}

